type Item implements BaseModel {
    _id: ID!
    store: Store
    buyer: User
    product: Product
    code: String!
    name: String!
    memo: String
    status: ItemStatus!
    statusChangedHistory: [ItemStatusChanged!]
    phoneNumber: String
    dateTimeRange: DateTimeRange
    permissionInfo: ItemPermissionInfo
    customFieldValues: [CustomFieldValue!]
    agreeWithPrivacyPolicy: AgreeWithPrivacyPolicy!
    createdAt: DateTime!
    updatedAt: DateTime!
    expiresAt: DateTime
}

# TODO 나중에 작업해야됨 => Store에 어떤식으로 Content 전문을 저장할지 고민해보기... 버전도 있어야할듯 ㅜ
type AgreeWithPrivacyPolicy {
    agree: Boolean!
    updatedAt: DateTime!
    createdAt: DateTime!
}

input AgreeWithPrivacyPolicyInput {
    agree: Boolean!
    date: DateTime
}

enum ItemStatus {
    # 취소됨
    CANCELED
    # 대기중
    PENDING
    # 허가완료
    PERMITTED
}

type ItemPermissionInfo {
    date: DateTime!
    user: User!
    comment: String
}

type ItemStatusChanged {
    type: String!
    status: ItemStatus!
    worker: User!
    comment: String
    item: Item!
    date: DateTime!
}
